<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Clever2D</name>
    </assembly>
    <members>
        <member name="T:Clever2D.Core.Clever">
            <summary>
            The base core script of Clever2D game engine.
            </summary>
        </member>
        <member name="P:Clever2D.Core.Clever.Renderer">
            <summary>
            Returns the current screen renderer.
            </summary>
        </member>
        <member name="P:Clever2D.Core.Clever.Focused">
            <summary>
            Returns the window focus status.
            </summary>
        </member>
        <member name="P:Clever2D.Core.Clever.Quit">
            <summary>
            Returns the applications quit status.
            </summary>
        </member>
        <member name="P:Clever2D.Core.Clever.CurrentState">
            <summary>
            Returns the current window state.
            </summary>
        </member>
        <member name="P:Clever2D.Core.Clever.Size">
            <summary>
            Returns or sets the window's internal size, before scaling.
            </summary>
        </member>
        <member name="P:Clever2D.Core.Clever.Position">
            <summary>
            Returns or sets the window's position in screen space.
            </summary>
        </member>
        <member name="P:Clever2D.Core.Clever.Fonts">
            <summary>
            Returns the loaded fonts.
            </summary>
        </member>
        <member name="M:Clever2D.Core.Clever.ScheduleCommand(System.Action)">
            <summary>
            Registers a new scheduled command.
            </summary>
            <param name="action">Scheduled action.</param>
        </member>
        <member name="T:Clever2D.Core.Clever.Initialized">
            <summary>
            Delegate for Clever finishing initialization.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.OnInitialized">
            <summary>
            This event gets called when Clever finishes initialization.
            </summary>
        </member>
        <member name="M:Clever2D.Core.Clever.Initialize(Clever2D.Engine.ApplicationConfig)">
            <summary>
            Initializes the engine and starts the game. Call Start() method after this to start the engine.
            </summary>
        </member>
        <member name="M:Clever2D.Core.Clever.Start(Clever2D.Engine.Scene[])">
            <summary>
            Starts the engine and main loop.
            </summary>
            <param name="scenes">Scenes to load.</param>
        </member>
        <member name="E:Clever2D.Core.Clever.Update">
            <summary>
            Invoked once every window event loop.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.FixedUpdate">
            <summary>
            Frame-rate independent window event loop.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.Destroying">
            <summary>
            Invoked when the application has started to destroy.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.Destroyed">
            <summary>
            Invoked when the application has destroyed.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.MouseEntered">
            <summary>
            Invoked when mouse has entered the window.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.MouseLeft">
            <summary>
            Invoked when mouse has left the window.
            </summary>
        </member>
        <member name="T:Clever2D.Core.Clever.WindowMovedHandler">
            <summary>
            Delegate handler for window position change.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.Moved">
            <summary>
            Invoked after the window has moved.
            </summary>
        </member>
        <member name="T:Clever2D.Core.Clever.WindowResizedHandler">
            <summary>
            Delegate handler for window size change.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.Resized">
            <summary>
            Invoked after the window has resized.
            </summary>
        </member>
        <member name="T:Clever2D.Core.Clever.KeyPressHandler">
            <summary>
            Delegate handler for key press.
            </summary>
        </member>
        <member name="T:Clever2D.Core.Clever.KeyReleaseHandler">
            <summary>
            Delegate handler for key release.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.OnKeyPress">
            <summary>
            This event gets called when a key is pressed.
            </summary>
        </member>
        <member name="E:Clever2D.Core.Clever.OnKeyRelease">
            <summary>
            This event gets called when a key is released.
            </summary>
        </member>
        <member name="M:Clever2D.Core.Clever.ScheduleEvent(System.Action)">
            <summary>
            Adds an Action to the Scheduler expected to handle event callbacks.
            </summary>
            <param name="action">The Action to execute.</param>
        </member>
        <member name="P:Clever2D.Core.Clever.Fps">
            <summary>
            Returns the renderer fps.
            </summary>
        </member>
        <member name="T:Clever2D.Core.WindowState">
            <summary>
            Window state.
            </summary>
        </member>
        <member name="F:Clever2D.Core.WindowState.Windowed">
            <summary>
            Windowed state.
            </summary>
        </member>
        <member name="F:Clever2D.Core.WindowState.Fullscreen">
            <summary>
            Fullscreen state.
            </summary>
        </member>
        <member name="T:Clever2D.Core.ExtensionMethods">
            <summary>
            This class holds extension methods for various purposes and should not be used explicitly, ever.
            </summary>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.AddInPlace``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Adds the given item to the list according to standard sorting rules. Do not use on unsorted lists.
            </summary>
            <param name="list">The list to take values</param>
            <param name="item">The item that should be added.</param>
            <returns>The index in the list where the item was inserted.</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.AddInPlace``1(System.Collections.Generic.List{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Adds the given item to the list according to the comparers sorting rules. Do not use on unsorted lists.
            </summary>
            <param name="list">The list to take values</param>
            <param name="item">The item that should be added.</param>
            <param name="comparer">The comparer that should be used for sorting.</param>
            <returns>The index in the list where the item was inserted.</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.GetOrDefault``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            Try to get a value from the <paramref name="dictionary"/>. Returns a default(TValue) if the key does not exist.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="lookup">The lookup key.</param>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ToJagged``1(``0[0:,0:])">
            <summary>
            Converts a rectangular array to a jagged array.
            <para>
            The jagged array will contain empty arrays if there are no columns in the rectangular array.
            </para>
            </summary>
            <param name="rectangular">The rectangular array.</param>
            <returns>The jagged array.</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ToRectangular``1(``0[][])">
            <summary>
            Converts a jagged array to a rectangular array.
            <para>
            All elements that did not exist in the original jagged array are initialized to their default values.
            </para>
            </summary>
            <param name="jagged">The jagged array.</param>
            <returns>The rectangular array.</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.Invert``1(``0[0:,0:])">
            <summary>
            Inverts the rows and columns of a rectangular array.
            </summary>
            <param name="array">The array to invert.</param>
            <returns>The inverted array.</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.Invert``1(``0[][])">
            <summary>
            Inverts the rows and columns of a jagged array.
            </summary>
            <param name="array">The array to invert.</param>
            <returns>The inverted array. This is always a square array.</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ToResolutionString(System.Drawing.Size)">
            <summary>
            Returns the given size as a resolution string.
            </summary>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.GetLoadableTypes(System.Reflection.Assembly)">
            <summary>
            Gets given assembly loadable types.
            </summary>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.GetDescription(System.Object)">
            <summary>
            Returns the description of a given object, via (in order):
            <list type="number">
              <item>
                <description>Any attached <see cref="T:System.ComponentModel.DescriptionAttribute"/>.</description>
              </item>
              <item>
                <description>The object's <see cref="M:System.Object.ToString"/>.</description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ComputeSHA2Hash(System.IO.Stream)">
            <summary>
            Gets a SHA-2 (256bit) hash for the given stream, seeking the stream before and after.
            </summary>
            <param name="stream">The stream to create a hash from.</param>
            <returns>A lower-case hex string representation of the hash (64 characters).</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ComputeSHA2Hash(System.String)">
            <summary>
            Gets a SHA-2 (256bit) hash for the given string.
            </summary>
            <param name="str">The string to create a hash from.</param>
            <returns>A lower-case hex string representation of the hash (64 characters).</returns>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ComputeMD5Hash(System.IO.Stream)">
            <summary>
            Returns streams MD5 hash.
            </summary>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ComputeMD5Hash(System.String)">
            <summary>
            Returns strings MD5 hash.
            </summary>
        </member>
        <member name="M:Clever2D.Core.ExtensionMethods.ToStandardisedPath(System.String)">
            <summary>
            Standardise the path string using '/' as directory separator.
            Useful as output.
            </summary>
            <param name="path">The path string to standardise.</param>
            <returns>The standardised path string.</returns>
        </member>
        <member name="T:Clever2D.Engine.Animation">
            <summary>
            The animation is used to play back animations.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Animation.name">
            <summary>
            Name of this animation.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Animation.timeline">
            <summary>
            Timeline of all frames of this animation.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Animation.transitions">
            <summary>
            All transitions connected from this animation.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.AnimationCondition">
            <summary>
            Conditions for animation transitions.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationCondition.name">
            <summary>
            Condition name.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationCondition.value">
            <summary>
            Condition name (unset type).
            </summary>
        </member>
        <member name="T:Clever2D.Engine.AnimationPoint">
            <summary>
            The point of an animations timeline.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationPoint.time">
            <summary>
            The point of time in the animations timeline in milliseconds.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationPoint.spriteIndex">
            <summary>
            The index of a sprite in a sprite array.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.AnimationPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            The point of an animations timeline.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.AnimationTransition">
            <summary>
            Animation transition from animation to animation.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationTransition.conditions">
            <summary>
            Transition conditions.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationTransition.to">
            <summary>
            ID of the animation to transition.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.AnimationTransitionCondition">
            <summary>
            Animation transitions set conditions.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationTransitionCondition.name">
            <summary>
            Condition name.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimationTransitionCondition.value">
            <summary>
            Conditions set value.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Animator">
            <summary>
            Animator is the base of an GameObjects sprite animations.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Animator.animations">
            <summary>
            Animators animations.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Animator.conditions">
            <summary>
            Animators conditions.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Animator.activeAnimation">
            <summary>
            Currently active animation.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.AnimatorController">
            <summary>
            The controller of the animators animations.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimatorController.animatorPath">
            <summary>
            Assigned animators file path.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.AnimatorController.animator">
            <summary>
            The animator assigned to this controller.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.AnimatorController.#ctor(System.String)">
            <summary>
            The controller of the animators animations.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.AnimatorController.SetBool(System.String,System.Boolean)">
            <summary>
            Set an animators bool conditions value.
            </summary>
            <param name="name">Animator condition name.</param>
            <param name="value">Condition value.</param>
        </member>
        <member name="M:Clever2D.Engine.AnimatorController.SetInt(System.String,System.Int32)">
            <summary>
            Set an animators int conditions value.
            </summary>
            <param name="name">Animator condition name.</param>
            <param name="value">Condition value.</param>
        </member>
        <member name="M:Clever2D.Engine.AnimatorController.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Application">
            <summary>
            Access to application data.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Application.ExecutableDirectory">
            <summary>
            Executable directory (path to .exe without the executable file).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Application.Config">
            <summary>
            Get the Applications configuration.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Application.ProductName">
            <summary>
            Returns application product name (Read Only).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Application.CompanyName">
            <summary>
            Returns application company name (Read Only).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Application.ProductVersion">
            <summary>
            Returns application product version (Read Only).
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Application.Exit">
            <summary>
            Quits the application.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.ApplicationConfig">
            <summary>
            Configure an application.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.ApplicationConfig.ProductName">
            <summary>
            Returns application product name.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.ApplicationConfig.CompanyName">
            <summary>
            Returns application company name.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.ApplicationConfig.Version">
            <summary>
            Returns application product version.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.AssetLoader">
            <summary>
            Manages all the loaded assets and preloads them.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.AssetLoader.GetAsset(System.String)">
            <summary>
            Returns a loaded asset. If asset is not loaded, returns a null.
            </summary>
            <param name="resourceName">Assets resource name.</param>
        </member>
        <member name="M:Clever2D.Engine.AssetLoader.AddAsset(System.String,System.Object)">
            <summary>
            Adds an asset to resources list for optimization. If asset is already loaded, returns false.
            </summary>
            <param name="resourceName">Assets resource name.</param>
        </member>
        <member name="T:Clever2D.Engine.Camera">
            <summary>
            Camera renders the loaded Scene.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Camera.MainCamera">
            <summary>
            Returns the global main camera.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Camera.#ctor">
            <summary>
            Camera renders the loaded Scene.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Camera.Update">
            <summary>
            Update is called on every frame.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Camera.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.CleverScript">
            <summary>
            CleverScript is the base class from which every Clever script delivers.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.CleverScript.Start">
            <summary>
            Start is called on the frame when a script is enabled just before any Update methods are called.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.CleverScript.Update">
            <summary>
            Update is called on every frame.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.CleverScript.FixedUpdate">
            <summary>
            Frame-rate independ Update method.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.CleverScript.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.CMath">
            <summary>
            CMath contains additional math calculations.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.CMath.Gcd(System.UInt64,System.UInt64)">
            <summary>
            Greatest common divisor.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.CMath.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Returns the clamped value to the given minimum and maximum values.
            </summary>
            <param name="original">Value to clamp.</param>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
        </member>
        <member name="T:Clever2D.Engine.Collider">
            <summary>
            Collider manages colliding with other Colliders.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Collider.size">
            <summary>
            Size of this collider.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Collider.offset">
            <summary>
            Offset of this collider.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Collider.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Color">
            <summary>
            Color class makes SDL color usage easier.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Color.r">
            <summary>
            Red value of this color.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Color.g">
            <summary>
            Green value of this color.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Color.b">
            <summary>
            Blue value of this color.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Color.a">
            <summary>
            Alpha value of this color.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Color.#ctor">
            <summary>
            Color class makes SDL color usage easier.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Color class makes SDL color usage easier.
            </summary>
            <param name="r">Red value of this color.</param>
            <param name="g">Green value of this color.</param>
            <param name="b">Blue value of this color.</param>
            <param name="a">Alpha value of this color.</param>
        </member>
        <member name="P:Clever2D.Engine.Color.SdlColor">
            <summary>
            Returns this Color as SDL_Color.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Color.GetHashCode">
            <summary>
            Returns this Color as a hash code.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Component">
            <summary>
            Base class for everything attached to GameObjects.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Component.gameObject">
            <summary>
            The GameObject where this component is assigned.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Component.transform">
            <summary>
            The Transform component attached to this GameObject.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Component.Destroy(Clever2D.Engine.Component)">
            <summary>
            Removes a GameObject, component or asset.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Component.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Component.Dispose(System.Boolean)">
            <summary>
            Disposes this Component.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Cryptography">
            <summary>
            Cryptography has hashing methods.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Cryptography.HashSHA1(System.String)">
            <summary>
            Returns a SHA1 hash of a string.
            </summary>
            <param name="input">String to hash.</param>
        </member>
        <member name="T:Clever2D.Engine.GameObject">
            <summary>
            Base class for all entities in scenes.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.GameObject.InstanceId">
            <summary>
            Gets the instance ID of this GameObject.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.GameObject.name">
            <summary>
            The name of this GameObject.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.GameObject.isStatic">
            <summary>
            Is object static (In example occlusion can be applied).
            </summary>
        </member>
        <member name="F:Clever2D.Engine.GameObject.tag">
            <summary>
            The assigned tag to this GameObject.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.GameObject.transform">
            <summary>
            The transform component of this GameObject.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.GameObject.components">
            <summary>
            Components of this GameObject.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.GameObject.children">
            <summary>
            Children GameObjects of this GameObject.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.GameObject.parent">
            <summary>
            Parent of this GameObject.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.GetComponent``1">
            <summary>
            Retrieves and returns a Component of type T.
            </summary>
            <typeparam name="T">The type of the Compnent to retrieve.</typeparam>
        </member>
        <member name="M:Clever2D.Engine.GameObject.#ctor(System.String,System.String)">
            <summary>
            Base class for all entities in scenes.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.Spawn(Clever2D.Engine.GameObject)">
            <summary>
            Spawns the GameObject into the loaded scene.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.Spawn(Clever2D.Engine.GameObject,Clever2D.Engine.Vector2)">
            <summary>
            Spawns the GameObject into the loaded scene.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.Spawn(Clever2D.Engine.GameObject,Clever2D.Engine.Vector2,Clever2D.Engine.Vector2)">
            <summary>
            Spawns the GameObject into the loaded scene.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.SpawnGameObject(Clever2D.Engine.GameObject,Clever2D.Engine.Vector2,Clever2D.Engine.Vector2)">
            <summary>
            Sends the spawn request of the GameObject to the loaded scene.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.Destroy(Clever2D.Engine.GameObject)">
            <summary>
            Removes a GameObject, component or asset.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.Dispose">
            <summary>
            Disposes and destroys this GameObject.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.GameObject.Dispose(System.Boolean)">
            <summary>
            Disposes this GameObject and its components and children.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.OcclusionArea">
            <summary>
            Area used by OcclusionManager.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.OcclusionArea.renderers">
            <summary>
            SpriteRenderers contained in this area.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.OcclusionManager">
            <summary>
            Manages all the occlusion data.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.OcclusionManager.areas">
            <summary>
            Split chunk for rendering.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.OcclusionManager.nonStaticRenderers">
            <summary>
            List of static members tried to occlude.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.OcclusionManager.NonStaticRenderers">
            <summary>
            Returns an array of static members tried to occlude.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.OcclusionManager.AreaSize">
            <summary>
            Area chunk sizes.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.OcclusionManager.AddRenderer(Clever2D.Engine.SpriteRenderer)">
            <summary>
            Adds renderer to occlusion manager.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.OcclusionManager.RemoveRenderer(Clever2D.Engine.SpriteRenderer)">
            <summary>
            Adds renderer to occlusion manager.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.OcclusionManager.GetNearestAreas(Clever2D.Engine.Vector,System.Single)">
            <summary>
            Returns the nearest area to a point.
            </summary>
            <param name="position">Checking origin point.</param>
        </member>
        <member name="M:Clever2D.Engine.OcclusionManager.Clear">
            <summary>
            Clears the occlusion data created.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Player">
            <summary>
            The base class for the Clever Player which controls the logging.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Player._logFile">
            <summary>
            Path to the currently active log file.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Player._logDirectory">
            <summary>
            Path to the currently active log files directory.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Player.Log(System.Object)">
            <summary>
            Logs a message into the log file and Console.
            </summary>
            <param name="value">String or object to be displayed in the logs.</param>
        </member>
        <member name="M:Clever2D.Engine.Player.LogWarn(System.Object)">
            <summary>
            Logs a warning into the log file and Console.
            </summary>
            <param name="value">String or object to be displayed in the logs.</param>
        </member>
        <member name="M:Clever2D.Engine.Player.LogError(System.Object)">
            <summary>
            Logs an error into the log file and Console.
            </summary>
            <param name="value">String or object to be displayed in the logs.</param>
        </member>
        <member name="M:Clever2D.Engine.Player.LogError(System.Object,System.Exception)">
            <summary>
            Logs an error into the log file and Console.
            </summary>
            <param name="value">String or object to be displayed in the logs.</param>
            <param name="e">Exception to be displayed in the logs.</param>
        </member>
        <member name="M:Clever2D.Engine.Player.WriteLog(System.String,System.ConsoleColor)">
            <summary>
            Base method to save the log message into the log file and to display it in the Console.
            </summary>
            <param name="message">String to be displayed in the logs.</param>
            <param name="color">Color of the log message in Console.</param>
        </member>
        <member name="M:Clever2D.Engine.Player.GetTimestamp">
            <summary>
            Returns the timestamp of the frame this gets called.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Scene">
            <summary>
            Collection of entities and components.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Scene.name">
            <summary>
            Name of the scene.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Scene.SceneId">
            <summary>
            Get the ID of the scene.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Scene.nextId">
            <summary>
            The instance ID of the next instance.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Scene.availableIds">
            <summary>
            List of all IDs of destroyed spawned GameObjects. These will be used by the next spawned GameObjects that are going to be spawned.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Scene.spawnedGameObjects">
            <summary>
            List of all spawned GameObjects.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Scene.SpawnedGameObjects">
            <summary>
            Returns the list of all spawned GameObjects.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Scene.IsInitialized">
            <summary>
            Returns if the Scene is initialized.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Scene.SpawnGameObject(Clever2D.Engine.GameObject)">
            <summary>
            Spawn a GameObejct to this Scene if loaded.
            </summary>
            <param name="gameObject">The GameObject to spawn.</param>
        </member>
        <member name="M:Clever2D.Engine.Scene.DestroyGameObject(Clever2D.Engine.GameObject)">
            <summary>
            Destroy a GameObject in this Scene if loaded.
            </summary>
            <param name="gameObject">The GameObject to destroy.</param>
        </member>
        <member name="M:Clever2D.Engine.Scene.AddGameObject(System.Int32,Clever2D.Engine.GameObject)">
            <summary>
            Add a GameObject being spawned into the spawned GameObjects list.
            </summary>
            <param name="id">The instance ID of the GameObject.</param>
            <param name="gameObject">The spawned GameObject.</param>
        </member>
        <member name="M:Clever2D.Engine.Scene.RemoveGameObject(Clever2D.Engine.GameObject)">
            <summary>
            Removes a GameObject added into the spawned GameObjects list.
            </summary>
            <param name="gameObject">The spawned GameObject to be removed.</param>
        </member>
        <member name="M:Clever2D.Engine.Scene.LoadScene">
            <summary>
            Loads this scene.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Scene.sceneGameObjects">
            <summary>
            List of the GameObjects in this Scene.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.SceneManager">
            <summary>
            The base class which manages all the Scenes.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.SceneManager.IsInitialized">
            <summary>
            Returns if the SceneManager is initialized.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SceneManager.Initialize">
            <summary>
            Start the game and load the first Scene.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.SceneManager.SceneList">
            <summary>
            Returns the Scene list.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.SceneManager.includedScenes">
            <summary>
            The Scene list.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SceneManager.AddScene(Clever2D.Engine.Scene)">
            <summary>
            Add a Scene to the SceneManagers Scene list.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SceneManager.AddScenes(Clever2D.Engine.Scene[])">
            <summary>
            Add multiple Scenes to the SceneManagers Scene list.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SceneManager.AddScenes(System.Collections.Generic.List{Clever2D.Engine.Scene})">
            <summary>
            Add multiple Scenes to the SceneManagers Scene list.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.SceneManager.LoadedScene">
            <summary>
            Returns the loaded Scene.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.SceneManager.LoadedEventHandler">
            <summary>
            EventHandler for the event OnLoaded.
            </summary>
            <param name="sender">The sender of this event.</param>
            <param name="e">The arguments for this event.</param>
        </member>
        <member name="E:Clever2D.Engine.SceneManager.OnLoaded">
            <summary>
            This event gets called when a Scene is done loading.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.SceneManager.LoadEventHandler">
            <summary>
            EventHandler for the event OnLoad.
            </summary>
            <param name="sender">The sender of this event.</param>
            <param name="e">The arguments for this event.</param>
        </member>
        <member name="E:Clever2D.Engine.SceneManager.OnLoad">
            <summary>
            This event gets called when a Scene starts to load.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SceneManager.LoadScene(Clever2D.Engine.Scene)">
            <summary>
            Load a scene.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.SceneEventArgs">
            <summary>
            Event arguments for Scene loading events.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SceneEventArgs.#ctor(Clever2D.Engine.Scene)">
            <summary>
            Event arguments for Scene loading events.
            </summary>
            <param name="scene">The Scene this event call is for.</param>
        </member>
        <member name="P:Clever2D.Engine.SceneEventArgs.Scene">
            <summary>
            The Scene this event call is for.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Sprite">
            <summary>
            Represents a Sprite object for use in 2D gameplay.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Sprite.image">
            <summary>
            Image assigned to this Sprite.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Sprite.rect">
            <summary>
            Rect of the assigned image to this object which contains the size of the texture.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Sprite.pivot">
            <summary>
            Sprite pivot (scales from 0 to 1 per dimension).
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Sprite.path">
            <summary>
            Path to the source of the image of this Sprite.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Sprite.Path">
            <summary>
            Returns the path to the source of the image of this Sprite.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Sprite.size">
            <summary>
            Size of this Sprite.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Sprite.offset">
            <summary>
            Offset of this Sprite.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Sprite.#ctor">
            <summary>
            Represents a Sprite object for use in 2D gameplay.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Sprite.#ctor(System.String,Clever2D.Engine.Vector2)">
            <summary>
            Represents a Sprite object for use in 2D gameplay.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Sprite.#ctor(System.String,Clever2D.Engine.Vector2,Clever2D.Engine.Vector2Int)">
            <summary>
            Represents a Sprite object for use in 2D gameplay.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Sprite.#ctor(System.String,Clever2D.Engine.Vector2,Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector2)">
            <summary>
            Represents a Sprite object for use in 2D gameplay.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Sprite.SetOpacity(System.Single)">
            <summary>
            Sets opacity of the image.
            </summary>
            <param name="opacity">Opacity filter opacity.</param>
        </member>
        <member name="M:Clever2D.Engine.Sprite.OpacityFilter(SixLabors.ImageSharp.Image,System.Single)">
            <summary>
            Sets opacity of the image.
            </summary>
            <param name="image">Image to add a filter into.</param>
            <param name="opacity">Opacity filter opacity.</param>
        </member>
        <member name="T:Clever2D.Engine.SpriteArray">
            <summary>
            2D array of Sprites.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.SpriteArray.spritePath">
            <summary>
            Path to the source of the image of this Sprite.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.SpriteArray.pivot">
            <summary>
            Sprite pivot (scales from 0 to 1 per dimension).
            </summary>
        </member>
        <member name="F:Clever2D.Engine.SpriteArray.rows">
            <summary>
            SpriteArrays row count.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.SpriteArray.columns">
            <summary>
            SpriteArrays column count.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.SpriteArray.Sprites">
            <summary>
            Returns this Sprite array.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SpriteArray.#ctor(System.String,Clever2D.Engine.Vector2,System.Int32,System.Int32)">
            <summary>
            2D array of Sprites.
            </summary>
            <param name="spritePath">Target Sprite asset path.</param>
            <param name="pivot">Split sprites pivot point.</param>
            <param name="rows">Split Sprite rows count.</param>
            <param name="columns">Split Sprite columns count.</param>
        </member>
        <member name="T:Clever2D.Engine.SpriteRenderer">
            <summary>
            Component that manages the Sprite wanted to be rendered in a GameObject.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.SpriteRenderer.sprite">
            <summary>
            The assigned Sprite to this SpriteRenderer.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.SpriteRenderer.spriteArray">
            <summary>
            The assigned SpriteArray to this SpriteRenderer.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.SpriteRenderer.Sprite">
            <summary>
            Returns the assigned image to this SpriteRenderer.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SpriteRenderer.#ctor(Clever2D.Engine.Sprite)">
            <summary>
            Component that manages the Sprite wanted to be rendered in a GameObject.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SpriteRenderer.#ctor(Clever2D.Engine.SpriteArray)">
            <summary>
            Component that manages the Sprite wanted to be rendered in a GameObject.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.SpriteRenderer.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Time">
            <summary>
            The base class that manages the time of this Clever game.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Time._startTime">
            <summary>
            The time at the beginning of the first frame.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Time.TotalTime">
            <summary>
            Returns the time from the beginning of the first frame.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Time.DeltaTime">
            <summary>
            Returns the interval in seconds from the last frame to the current one.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Time.Initialize">
            <summary>
            Initializes the Time class.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Transform">
            <summary>
            Component that handles the GameObjects position, rotation and scale in the Scene.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Transform.position">
            <summary>
            Position of the GameObject this Component is assigned to.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Transform.rotation">
            <summary>
            Rotation of the GameObject this Component is assigned to.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Transform.scale">
            <summary>
            Scale of the GameObject this Component is assigned to.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Transform.#ctor">
            <summary>
            Component that handles the GameObjects position, rotation and scale in the Scene.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Transform.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Vector">
            <summary>
            The base class of all Vector types.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Vector.x">
            <summary>
            X component of the vector.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Vector.y">
            <summary>
            Y component of the vector.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.Vector.z">
            <summary>
            Z component of the vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.ToString">
            <summary>
            Returns a formatted string for this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.Equals(System.Object)">
            <summary>
            Returns true if the given vector is exactly equal to this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.GetHashCode">
            <summary>
            Gets the hash code for the Vector value.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.Normalize">
            <summary>
            Makes this vector have a magnitude of 1.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector.Magnitude">
            <summary>
            Gets the magnitude of this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.op_Equality(Clever2D.Engine.Vector,Clever2D.Engine.Vector)">
            <summary>
            Equals.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.op_Inequality(Clever2D.Engine.Vector,Clever2D.Engine.Vector)">
            <summary>
            Doesn't match.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.ToVector2">
            <summary>
            Converts any Vector value to Vector2.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.ToVector3">
            <summary>
            Converts any Vector value to Vector3.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector.Distance(Clever2D.Engine.Vector,Clever2D.Engine.Vector)">
            <summary>
            Returns the distance between two Vector points.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Vector2">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.#ctor">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.#ctor(System.Single)">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.Right">
            <summary>
            Shorthand for writing Vector2(1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.Left">
            <summary>
            Shorthand for writing Vector2(-1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.Up">
            <summary>
            Shorthand for writing Vector2(0, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.Down">
            <summary>
            Shorthand for writing Vector2(0, -1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.One">
            <summary>
            Shorthand for writing Vector2(1, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.Zero">
            <summary>
            Shorthand for writing Vector2(0, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.PositiveInfinity">
            <summary>
            Shorthand for writing Vector2(float.PositiveInfinity, float.PositiveInfinity).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.NegativeInfinity">
            <summary>
            Shorthand for writing Vector2(float.NegativeInfinity, float.NegativeInfinity).
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.Set(System.Single,System.Single)">
            <summary>
            Set x and y components of an existing Vector2.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.ToString">
            <summary>
            Returns a formatted string for this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.Equals(System.Object)">
            <summary>
            Returns true if the given vector is exactly equal to this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.GetHashCode">
            <summary>
            Gets the hash code for the Vector value.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2.Normalized">
            <summary>
            Gets this vector with a magnitude of 1.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Addition(Clever2D.Engine.Vector2,Clever2D.Engine.Vector2)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Addition(Clever2D.Engine.Vector2,Clever2D.Engine.Vector3)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Subtraction(Clever2D.Engine.Vector2,Clever2D.Engine.Vector2)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Subtraction(Clever2D.Engine.Vector2,Clever2D.Engine.Vector3)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Subtraction(Clever2D.Engine.Vector3,Clever2D.Engine.Vector2)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Multiply(Clever2D.Engine.Vector2,Clever2D.Engine.Vector2)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Multiply(Clever2D.Engine.Vector2,Clever2D.Engine.Vector3)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Multiply(Clever2D.Engine.Vector3,Clever2D.Engine.Vector2)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Multiply(Clever2D.Engine.Vector2,System.Single)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Multiply(Clever2D.Engine.Vector2,System.Int32)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Multiply(Clever2D.Engine.Vector2,System.Double)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Multiply(Clever2D.Engine.Vector2,System.Decimal)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Division(Clever2D.Engine.Vector2,Clever2D.Engine.Vector2)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Division(Clever2D.Engine.Vector2,Clever2D.Engine.Vector3)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Division(Clever2D.Engine.Vector3,Clever2D.Engine.Vector2)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2.op_Division(Clever2D.Engine.Vector2,System.Single)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Vector3">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.#ctor">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.#ctor(System.Single)">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.#ctor(System.Single,System.Single)">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Right">
            <summary>
            Shorthand for writing Vector3(1, 0, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Left">
            <summary>
            Shorthand for writing Vector3(-1, 0, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Up">
            <summary>
            Shorthand for writing Vector3(0, 1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Down">
            <summary>
            Shorthand for writing Vector3(0, -1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Forward">
            <summary>
            Shorthand for writing Vector3(0, 0, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Back">
            <summary>
            Shorthand for writing Vector3(0, 0, -1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.One">
            <summary>
            Shorthand for writing Vector3(1, 1, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Zero">
            <summary>
            Shorthand for writing Vector3(0, 0, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.PositiveInfinity">
            <summary>
            Shorthand for writing Vector3(float.PositiveInfinity, float.PositiveInfinity, float.PositiveInfinity).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.NegativeInfinity">
            <summary>
            Shorthand for writing Vector3(float.NegativeInfinity, float.NegativeInfinity, float.NegativeInfinity).
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.Set(System.Single,System.Single,System.Single)">
            <summary>
            Set x and y components of an existing Vector3.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.ToString">
            <summary>
            Returns a formatted string for this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.Equals(System.Object)">
            <summary>
            Returns true if the given vector is exactly equal to this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.GetHashCode">
            <summary>
            Gets the hash code for the Vector value.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3.Normalized">
            <summary>
            Gets this vector with a magnitude of 1.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Addition(Clever2D.Engine.Vector3,Clever2D.Engine.Vector2)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Addition(Clever2D.Engine.Vector3,Clever2D.Engine.Vector3)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Subtraction(Clever2D.Engine.Vector3,Clever2D.Engine.Vector2)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Subtraction(Clever2D.Engine.Vector3,Clever2D.Engine.Vector3)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Multiply(Clever2D.Engine.Vector3,Clever2D.Engine.Vector3)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Multiply(Clever2D.Engine.Vector3,Clever2D.Engine.Vector2)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Multiply(Clever2D.Engine.Vector3,System.Single)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Multiply(Clever2D.Engine.Vector3,System.Int32)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Multiply(Clever2D.Engine.Vector3,System.Double)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Multiply(Clever2D.Engine.Vector3,System.Decimal)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Division(Clever2D.Engine.Vector3,Clever2D.Engine.Vector3)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Division(Clever2D.Engine.Vector3,Clever2D.Engine.Vector2)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3.op_Division(Clever2D.Engine.Vector3,System.Single)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.VectorInt">
            <summary>
            The base class of all Vector types.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.VectorInt.x">
            <summary>
            X component of the vector.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.VectorInt.y">
            <summary>
            Y component of the vector.
            </summary>
        </member>
        <member name="F:Clever2D.Engine.VectorInt.z">
            <summary>
            Z component of the vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.VectorInt.ToString">
            <summary>
            Returns a formatted string for this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.VectorInt.Equals(System.Object)">
            <summary>
            Returns true if the given vector is exactly equal to this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.VectorInt.GetHashCode">
            <summary>
            Gets the hash code for the Vector value.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.VectorInt.op_Equality(Clever2D.Engine.VectorInt,Clever2D.Engine.VectorInt)">
            <summary>
            Compare Vectors.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.VectorInt.op_Inequality(Clever2D.Engine.VectorInt,Clever2D.Engine.VectorInt)">
            <summary>
            Compare Vectors (doesn't match).
            </summary>
        </member>
        <member name="M:Clever2D.Engine.VectorInt.ToVector2Int">
            <summary>
            Converts any Vector value to Vector2Int.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.VectorInt.ToVector3Int">
            <summary>
            Converts any Vector value to Vector3Int.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Vector2Int">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.#ctor">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.#ctor(System.Int32)">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.#ctor(System.Int32,System.Int32)">
            <summary>
            Representation of 2D vectors and points.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2Int.Right">
            <summary>
            Shorthand for writing Vector2Int(1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2Int.Left">
            <summary>
            Shorthand for writing Vector2Int(-1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2Int.Up">
            <summary>
            Shorthand for writing Vector2Int(0, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2Int.Down">
            <summary>
            Shorthand for writing Vector2Int(0, -1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2Int.One">
            <summary>
            Shorthand for writing Vector2Int(1, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector2Int.Zero">
            <summary>
            Shorthand for writing Vector2Int(0, 0).
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.Set(System.Int32,System.Int32)">
            <summary>
            Set x and y components of an existing Vector2.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.ToString">
            <summary>
            Returns a formatted string for this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.Equals(System.Object)">
            <summary>
            Returns true if the given vector is exactly equal to this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.GetHashCode">
            <summary>
            Gets the hash code for the Vector value.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Addition(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Addition(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Subtraction(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Subtraction(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Subtraction(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Multiply(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Multiply(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Multiply(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Multiply(Clever2D.Engine.Vector2Int,System.Int32)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Division(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Division(Clever2D.Engine.Vector2Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector2Int.op_Division(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="T:Clever2D.Engine.Vector3Int">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.#ctor">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.#ctor(System.Int32)">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.#ctor(System.Int32,System.Int32)">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Representation of 3D vectors and points.
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.Right">
            <summary>
            Shorthand for writing Vector3Int(1, 0, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.Left">
            <summary>
            Shorthand for writing Vector3Int(-1, 0, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.Up">
            <summary>
            Shorthand for writing Vector3Int(0, 1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.Down">
            <summary>
            Shorthand for writing Vector3Int(0, -1, 0).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.Forward">
            <summary>
            Shorthand for writing Vector3Int(0, 0, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.Back">
            <summary>
            Shorthand for writing Vector3Int(0, 0, -1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.One">
            <summary>
            Shorthand for writing Vector3Int(1, 1, 1).
            </summary>
        </member>
        <member name="P:Clever2D.Engine.Vector3Int.Zero">
            <summary>
            Shorthand for writing Vector3Int(0, 0, 0).
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.Set(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set x and y components of an existing Vector3Int.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.ToString">
            <summary>
            Returns a formatted string for this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.Equals(System.Object)">
            <summary>
            Returns true if the given vector is exactly equal to this vector.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.GetHashCode">
            <summary>
            Gets the hash code for the Vector value.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Addition(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Addition(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Add.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Subtraction(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Subtraction(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Subtract.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Multiply(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Multiply(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Multiply(Clever2D.Engine.Vector3Int,System.Int32)">
            <summary>
            Multiply.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Division(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector3Int)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="M:Clever2D.Engine.Vector3Int.op_Division(Clever2D.Engine.Vector3Int,Clever2D.Engine.Vector2Int)">
            <summary>
            Divide.
            </summary>
        </member>
        <member name="T:Clever2D.Input.Input">
            <summary>
            The base class that handles all Input in the Clever game.
            </summary>
        </member>
        <member name="M:Clever2D.Input.Input.GetKey(SDL2.SDL.SDL_Keycode)">
            <summary>
            Returns a bool value if the given key is pressed at the moment.
            </summary>
            <param name="key">Key to be checked for input.</param>
        </member>
        <member name="M:Clever2D.Input.Input.GetButton(System.String)">
            <summary>
            Returns a bool value if the given key is pressed at the moment.
            </summary>
            <param name="button">Button name to be checked for input.</param>
        </member>
        <member name="T:Clever2D.Input.InputManager">
            <summary>
            Manages all the input.
            </summary>
        </member>
        <member name="F:Clever2D.Input.InputManager.KeysPressed">
            <summary>
            List of all keys pressed at the moment.
            </summary>
        </member>
        <member name="M:Clever2D.Input.InputManager.Initialize">
            <summary>
            Initializes the InputManager.
            </summary>
        </member>
        <member name="M:Clever2D.Input.InputManager.KeyDown(SDL2.SDL.SDL_KeyboardEvent)">
            <summary>
            Player presses a key.
            </summary>
        </member>
        <member name="M:Clever2D.Input.InputManager.KeyUp(SDL2.SDL.SDL_KeyboardEvent)">
            <summary>
            Player releases a key.
            </summary>
        </member>
        <member name="T:Clever2D.Input.KeyboardEvent">
            <summary>
            Keyboard event for InputManager.
            </summary>
        </member>
        <member name="F:Clever2D.Input.KeyboardEvent.key">
            <summary>
            Event key.
            </summary>
        </member>
        <member name="F:Clever2D.Input.KeyboardEvent.keyEvent">
            <summary>
            Event key event.
            </summary>
        </member>
        <member name="F:Clever2D.Input.KeyboardEvent.time">
            <summary>
            Event time.
            </summary>
        </member>
        <member name="M:Clever2D.Input.KeyboardEvent.#ctor(SDL2.SDL.SDL_KeyboardEvent,System.Single)">
            <summary>
            Keyboard event for InputManager.
            </summary>
        </member>
        <member name="T:Clever2D.Threading.ScheduledDelegate">
            <summary>
            Scheduled delegate for scheduling delegates.
            </summary>
        </member>
        <member name="P:Clever2D.Threading.ScheduledDelegate.ExecutionTime">
            <summary>
            The earliest ElapsedTime value at which this task will be executed via a <see cref="T:Clever2D.Threading.Scheduler"/>.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.RepeatInterval">
            <summary>
            Time in milliseconds between repeats of this task. -1 means no repeats.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.PerformRepeatCatchUpExecutions">
            <summary>
            In the case of a repeating execution, setting this to true will allow the delegate to run more than once at already elapsed points in time in order to catch up to current.
            This will ensure a consistent number of runs over real-time, even if the <see cref="T:Clever2D.Threading.Scheduler"/> running the delegate is suspended.
            Setting to false will skip catch-up executions, ensuring a future time is used after each execution.
            </summary>
        </member>
        <member name="P:Clever2D.Threading.ScheduledDelegate.Completed">
            <summary>
            Whether this task has finished running.
            </summary>
        </member>
        <member name="P:Clever2D.Threading.ScheduledDelegate.Cancelled">
            <summary>
            Whether this task has been cancelled.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.State">
            <summary>
            Scheduled delegate run state.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.Task">
            <summary>
            The work task.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.ScheduledDelegate.#ctor(System.Action,System.Double,System.Double)">
            <summary>
            Scheduled delegate for scheduling delegates.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.ScheduledDelegate.RunTask">
            <summary>
            Invokes the scheduled task.
            </summary>
            <remarks>
            This call may block if the task is currently being run on another thread.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to run a task that has been cancelled or already completed.</exception>
        </member>
        <member name="M:Clever2D.Threading.ScheduledDelegate.RunTaskInternal">
            <summary>
            Invokes the scheduled task without throwing on incorrect state.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.ScheduledDelegate.Cancel">
            <summary>
            Cancel a task.
            </summary>
            <remarks>
            This call may block if the task is currently being run on another thread.
            </remarks>
        </member>
        <member name="M:Clever2D.Threading.ScheduledDelegate.CompareTo(Clever2D.Threading.ScheduledDelegate)">
            <summary>
            Compare scheduled delegate execution times.
            </summary>
        </member>
        <member name="T:Clever2D.Threading.ScheduledDelegate.RunState">
            <summary>
            The current state of a scheduled delegate.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.RunState.Waiting">
            <summary>
            Waiting to run. Potentially not the first run if on a repeating schedule.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.RunState.Running">
            <summary>
            Currently running.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.RunState.Complete">
            <summary>
            Running completed for a final time.
            </summary>
        </member>
        <member name="F:Clever2D.Threading.ScheduledDelegate.RunState.Cancelled">
            <summary>
            Task manually cancelled.
            </summary>
        </member>
        <member name="T:Clever2D.Threading.Scheduler">
            <summary>
            Marshals delegates to run from the Scheduler's base thread in a threadsafe manner
            </summary>
        </member>
        <member name="P:Clever2D.Threading.Scheduler.HasPendingTasks">
            <summary>
            Whether there are any tasks queued to run (including delayed tasks in the future).
            </summary>
        </member>
        <member name="P:Clever2D.Threading.Scheduler.TotalPendingTasks">
            <summary>
            The total number of <see cref="T:Clever2D.Threading.ScheduledDelegate"/>s tracked by this instance for future execution.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.#ctor">
            <summary>
            The base thread is assumed to be the thread on which the constructor is run.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.#ctor(System.Func{System.Boolean},Clever2D.Timing.IClock)">
            <summary>
            The base thread is assumed to be the thread on which the constructor is run.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.UpdateClock(Clever2D.Timing.IClock)">
            <summary>
            Scheduler update loop.
            </summary>
        </member>
        <member name="P:Clever2D.Threading.Scheduler.IsMainThread">
            <summary>
            Returns whether we are on the main thread or not.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.Update">
            <summary>
            Run any pending work tasks.
            </summary>
            <returns>The number of tasks that were run.</returns>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.CancelDelayedTasks">
            <summary>
            Cancel any pending work tasks.
            </summary>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.Add(System.Action,System.Boolean)">
            <summary>
            Add a task to be scheduled.
            </summary>
            <remarks>If scheduled, the task will be run on the next <see cref="M:Clever2D.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The work to be done.</param>
            <param name="forceScheduled">If set to false, the task will be executed immediately if we are on the main thread.</param>
            <returns>The scheduled task, or <c>null</c> if the task was executed immediately.</returns>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.Add(Clever2D.Threading.ScheduledDelegate)">
            <summary>
            Add a task to be scheduled.
            </summary>
            <remarks>The task will be run on the next <see cref="M:Clever2D.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The scheduled delegate to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when attempting to add a scheduled delegate that has been already completed.</exception>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.AddDelayed(System.Action,System.Double,System.Boolean)">
            <summary>
            Add a task which will be run after a specified delay from the current clock time.
            </summary>
            <param name="task">The work to be done.</param>
            <param name="timeUntilRun">Milliseconds until run.</param>
            <param name="repeat">Whether this task should repeat.</param>
            <returns>The scheduled task.</returns>
        </member>
        <member name="M:Clever2D.Threading.Scheduler.AddOnce(System.Action)">
            <summary>
            Adds a task which will only be run once per frame, no matter how many times it was scheduled in the previous frame.
            </summary>
            <remarks>The task will be run on the next <see cref="M:Clever2D.Threading.Scheduler.Update"/> independent of the current clock time.</remarks>
            <param name="task">The work to be done.</param>
            <returns>Whether this is the first queue attempt of this work.</returns>
        </member>
        <member name="T:Clever2D.Timing.IAdjustableClock">
            <summary>
            A clock that can be started, stopped, reset etc.
            </summary>
        </member>
        <member name="M:Clever2D.Timing.IAdjustableClock.Reset">
            <summary>
            Stop and reset position.
            </summary>
        </member>
        <member name="M:Clever2D.Timing.IAdjustableClock.Start">
            <summary>
            Start (resume) running.
            </summary>
        </member>
        <member name="M:Clever2D.Timing.IAdjustableClock.Stop">
            <summary>
            Stop (pause) running.
            </summary>
        </member>
        <member name="M:Clever2D.Timing.IAdjustableClock.Seek(System.Double)">
            <summary>
            Seek to a specific time position.
            </summary>
            <returns>Whether a seek was possible.</returns>
        </member>
        <member name="P:Clever2D.Timing.IAdjustableClock.Rate">
            <summary>
            The rate this clock is running at, relative to real-time.
            </summary>
        </member>
        <member name="M:Clever2D.Timing.IAdjustableClock.ResetSpeedAdjustments">
            <summary>
            Reset the rate to a stable value.
            </summary>
        </member>
        <member name="T:Clever2D.Timing.IClock">
            <summary>
            A basic clock for keeping time.
            </summary>
        </member>
        <member name="P:Clever2D.Timing.IClock.CurrentTime">
            <summary>
            The current time of this clock, in milliseconds.
            </summary>
        </member>
        <member name="P:Clever2D.Timing.IClock.Rate">
            <summary>
            The rate this clock is running at, relative to real-time.
            </summary>
        </member>
        <member name="P:Clever2D.Timing.IClock.IsRunning">
            <summary>
            Whether this clock is currently running or not.
            </summary>
        </member>
        <member name="F:Clever2D.Timing.StopwatchClock.rateChangeUsed">
            <summary>
            Keep track of how much stopwatch time we have used at previous rates.
            </summary>
        </member>
        <member name="F:Clever2D.Timing.StopwatchClock.rateChangeAccumulated">
            <summary>
            Keep track of the resultant time that was accumulated at previous rates.
            </summary>
        </member>
        <member name="P:Clever2D.Timing.StopwatchClock.stopwatchCurrentTime">
            <summary>
            The current time, represented solely by the accumulated <see cref="T:System.Diagnostics.Stopwatch"/> time.
            </summary>
        </member>
        <member name="T:Clever2D.UI.Text">
            <summary>
            Text element for UI.
            </summary>
        </member>
        <member name="F:Clever2D.UI.Text.text">
            <summary>
            Text element text.
            </summary>
        </member>
        <member name="F:Clever2D.UI.Text.fontStyle">
            <summary>
            Text style.
            </summary>
        </member>
        <member name="F:Clever2D.UI.Text.size">
            <summary>
            Text font size.
            </summary>
        </member>
        <member name="F:Clever2D.UI.Text.color">
            <summary>
            Text color.
            </summary>
        </member>
        <member name="F:Clever2D.UI.Text.sans">
            <summary>
            Text font.
            </summary>
        </member>
        <member name="F:Clever2D.UI.Text.worldSpace">
            <summary>
            Is element placed on the Screen or in the Scene.
            </summary>
        </member>
        <member name="M:Clever2D.UI.Text.#ctor">
            <summary>
            Text element for UI.
            </summary>
        </member>
        <member name="M:Clever2D.UI.Text.#ctor(System.Int32)">
            <summary>
            Text element for UI.
            </summary>
        </member>
        <member name="M:Clever2D.UI.Text.#ctor(System.String,System.Int32)">
            <summary>
            Text element for UI.
            </summary>
        </member>
        <member name="M:Clever2D.UI.Text.#ctor(System.String,System.Int32,SDL2.SDL.SDL_Color)">
            <summary>
            Text element for UI.
            </summary>
        </member>
        <member name="M:Clever2D.UI.Text.#ctor(SDL2.SDL.SDL_Color)">
            <summary>
            Text element for UI.
            </summary>
        </member>
        <member name="M:Clever2D.UI.Text.Dispose">
            <summary>
            Disposes and destroys this Component.
            </summary>
        </member>
        <member name="T:Clever2D.UI.FontStyle">
            <summary>
            Font styles for UI elements.
            </summary>
        </member>
        <member name="F:Clever2D.UI.FontStyle.Normal">
            <summary>
            Normal font style.
            </summary>
        </member>
        <member name="F:Clever2D.UI.FontStyle.Italic">
            <summary>
            Italic font style.
            </summary>
        </member>
        <member name="F:Clever2D.UI.FontStyle.Bold">
            <summary>
            Bold font style.
            </summary>
        </member>
        <member name="F:Clever2D.UI.FontStyle.Underline">
            <summary>
            Underline font style.
            </summary>
        </member>
        <member name="F:Clever2D.UI.FontStyle.Strikethrough">
            <summary>
            Strikethrough font style.
            </summary>
        </member>
        <member name="T:Clever2D.UI.UIElement">
            <summary>
            Base class for all UI elements.
            </summary>
        </member>
        <member name="F:Clever2D.UI.UIElement.screenAlign">
            <summary>
            Alignment of this UI element on screen. (0,0) is top-left and (1,1) is bottom-right.
            </summary>
        </member>
        <member name="F:Clever2D.UI.UIElement.pivot">
            <summary>
            Pivot of this UI element. (0,0) is top-left and (1,1) is bottom-right.
            </summary>
        </member>
        <member name="T:Clever2D.Version">
            <summary>
            The class that handles the Version of Clever.
            </summary>
        </member>
        <member name="P:Clever2D.Version.Release">
            <summary>
            Clever2D release state (Alpha, Beta, Release).
            </summary>
        </member>
        <member name="P:Clever2D.Version.CurrentVersion">
            <summary>
            Returns the current version of Clever.
            </summary>
        </member>
        <member name="P:Clever2D.Version.Copyright">
            <summary>
            Returns the copyright string of Celver.
            </summary>
        </member>
        <member name="T:Clever2D.Version.ReleaseState">
            <summary>
            The release state of a Version (Alpha, Beta, Release).
            </summary>
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumTouchDevices">
            \brief Get the number of registered touch devices.
        </member>
        <member name="M:SDL2.SDL.SDL_GetTouchDevice(System.Int32)">
            \brief Get the touch ID with the given index, or 0 if the index is invalid.
        </member>
        <member name="M:SDL2.SDL.SDL_GetNumTouchFingers(System.Int64)">
            \brief Get the number of active fingers for a given touch device.
        </member>
        <member name="M:SDL2.SDL.SDL_GetTouchFinger(System.Int64,System.Int32)">
            \brief Get the finger object of the given touch, with the given index.
            Returns pointer to SDL_Finger.
        </member>
    </members>
</doc>
